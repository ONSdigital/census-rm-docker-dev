version: '3'

services:
  party-service:
    container_name: party-service
    build: ${RAS_HOME}/ras-party
    volumes:
      - ${RAS_HOME}/ras-party:/app
    ports:
      - "${PARTY_PORT}:${PARTY_PORT}"
    external_links:
     - postgres
    environment:
      - APP_SETTINGS=DevelopmentConfig
      - DATABASE_URI=postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/postgres
      - RAS_OAUTH_SERVICE_PORT=${OAUTH_PORT}
      - RAS_OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID}
      - RAS_OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}
      - RAS_CASE_SERVICE_HOST=${CASE_HOST}
      - RAS_COLLEX_SERVICE_HOST=${COLLEX_HOST}
      - RAS_SURVEY_SERVICE_HOST=${SURVEY_HOST}
      - RAS_IAC_SERVICE_HOST=${IAC_HOST}
      - RAS_OAUTH_SERVICE_HOST=${OAUTH_HOST}
      - SECURITY_USER_NAME=${SECURITY_USER_NAME}
      - SECURITY_USER_PASSWORD=${SECURITY_USER_PASSWORD}
      - ZIPKIN_DSN=http://${ZIPKIN_HOST}:${ZIPKIN_PORT}/api/v1/spans
      - ZIPKIN_SAMPLE_RATE=100
    networks:
      - censusrmdockerdev_default
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PARTY_PORT}/info"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  collection-instrument-service:
    container_name: collection-instrument
    build: ${RAS_HOME}/ras-collection-instrument
    volumes:
      - ${RAS_HOME}/ras-collection-instrument:/app
    ports:
      - "${COLL_INST_PORT}:${COLL_INST_PORT}"
    environment:
      - APP_SETTINGS=DevelopmentConfig
      - DATABASE_URI=postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/postgres
      - SECURITY_USER_NAME=${SECURITY_USER_NAME}
      - SECURITY_USER_PASSWORD=${SECURITY_USER_PASSWORD}
      - JSON_SECRET_KEYS=${JSON_SECRET_KEYS}
      - CONFIG_YML=config/config-docker.yaml
      - ONS_CRYPTOKEY=somethingsecure
      - COLLECTION_EXERCISE_HOST=${COLLEX_HOST}
      - CASE_SERVICE_HOST=${CASE_HOST}
      - PARTY_SERVICE_HOST=${PARTY_HOST}
      - PARTY_SERVICE_PORT=${PARTY_PORT}
      - RM_SURVEY_SERVICE_HOST=${SURVEY_HOST}
      - RABBITMQ_AMQP_SURVEY_RESPONSE=amqp://guest:guest@${RABBIT_HOST}:${RABBIT_PORT}
      - RABBITMQ_AMQP_COLLECTION_INSTRUMENT=amqp://guest:guest@${RABBIT_HOST}:${RABBIT_PORT}
      - ZIPKIN_DSN=http://${ZIPKIN_HOST}:${ZIPKIN_PORT}/api/v1/spans
      - ZIPKIN_SAMPLE_RATE=100
    networks:
      - censusrmdockerdev_default
    external_links:
      - postgres:ras-postgres
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${COLL_INST_PORT}/info"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  respondent-home-ui:
    container_name: respondent-home-ui
    build: ${RAS_HOME}/respondent-home-ui
    volumes:
      - ${RAS_HOME}/respondent-home-ui:/app
    ports:
      - 9092:9092
    environment:
      - APP_SETTINGS=DevelopmentConfig
      - ACCOUNT_SERVICE_URL=http://localhost:9092
      - CASE_URL=http://${CASE_HOST}:${CASE_PORT}
      - CASE_USERNAME=${CASE_USERNAME}
      - CASE_PASSWORD=${CASE_PASSWORD}
      - COLLECTION_EXERCISE_URL=http://${COLLEX_HOST}:${COLLEX_PORT}
      - COLLECTION_EXERCISE_USERNAME=${COLLECTION_EXERCISE_USERNAME}
      - COLLECTION_EXERCISE_PASSWORD=${COLLECTION_EXERCISE_PASSWORD}
      - COLLECTION_INSTRUMENT_URL=http://${COLL_INST_HOST}:${COLL_INST_PORT}
      - COLLECTION_INSTRUMENT_USERNAME=${COLL_INST_USERNAME}
      - COLLECTION_INSTRUMENT_PASSWORD=${COLL_INST_PASSWORD}
      - IAC_URL=http://${IAC_HOST}:${IAC_PORT}
      - IAC_USERNAME=${IAC_USERNAME}
      - IAC_PASSWORD=${IAC_PASSWORD}
      - JSON_SECRET_KEYS=${JSON_SECRET_KEYS_RH}
      - SURVEY_URL=http://${SURVEY_HOST}:${SURVEY_PORT}
      - SURVEY_USERNAME=${SECURITY_USER_NAME}
      - SURVEY_PASSWORD=${SECURITY_USER_PASSWORD}
    networks:
      - censusrmdockerdev_default
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9092/info"]
      interval: 1m30s
      timeout: 10s
      retries: 3

networks:
   censusrmdockerdev_default:
     external: true
