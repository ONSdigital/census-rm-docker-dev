version: '3.4'
services:
  caseprocessor:
    container_name: caseprocessor
    image: eu.gcr.io/census-rm-ci/rm/census-rm-case-processor
    external_links:
     - postgres
     - rabbitmq
     - uacqid
    environment:
     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
     - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
     - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
     - UACSERVICE_CONNECTION_HOST=${UAC_HOST}
     - UACSERVICE_CONNECTION_PORT=${UAC_PORT}
     - EXCEPTIONMANAGER_CONNECTION_HOST=${EXCEPTIONMANAGER_HOST}
     - EXCEPTIONMANAGER_CONNECTION_PORT=${EXCEPTIONMANAGER_PORT}
     - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
     - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
     - CASEREFGENERATORKEY=${CASEREFGENERATORKEY}
    healthcheck:
      test: ["CMD", "find", "/tmp/case-service-healthy", "-mmin", "-1"]
      interval: 60s
      timeout: 10s
      retries: 4
      start_period: 45s

  actionscheduler:
    container_name: actionscheduler
    image: eu.gcr.io/census-rm-ci/rm/census-rm-action-scheduler
    ports:
     - "${ACTION_SCHEDULER_PORT}:8301"
    external_links:
     - postgres
     - rabbitmq
    environment:
     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
     - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
     - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
     - EXCEPTIONMANAGER_CONNECTION_HOST=${EXCEPTIONMANAGER_HOST}
     - EXCEPTIONMANAGER_CONNECTION_PORT=${EXCEPTIONMANAGER_PORT}
     - JAVA_TOOL_OPTIONS=-Xmx512m
     - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
     - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
     - FULFILMENT_BATCH_SCHEDULED_TIME=${FULFILMENT_BATCH_SCHEDULED_TIME}
    restart: always
    healthcheck:
      test: ["CMD", "find", "/tmp/action-scheduler-healthy", "-mmin", "-1"]
      interval: 60s
      timeout: 10s
      retries: 4
      start_period: 50s

  actionworker:
    container_name: actionworker
    image: eu.gcr.io/census-rm-ci/rm/census-rm-action-worker
    external_links:
     - postgres
     - rabbitmq
    environment:
     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
     - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
     - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
     - JAVA_TOOL_OPTIONS=-Xmx512m
     - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
     - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    healthcheck:
      test: ["CMD", "find", "/tmp/action-worker-healthy", "-mmin", "-1"]
      interval: 60s
      timeout: 10s
      retries: 4
      start_period: 30s

  uacqid:
    container_name: uacqid
    image: eu.gcr.io/census-rm-ci/rm/census-rm-uac-qid-service
    ports:
     - "${UAC_PORT}:8164"
    external_links:
     - postgres
    environment:
     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
     - JAVA_TOOL_OPTIONS=-Xmx128m -Xdebug -Dspring.profiles.active=dev
     - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
     - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8164/actuator/info"]
      interval: 60s
      timeout: 10s
      retries: 4
      start_period: 30s

  printfilesvc:
    container_name: printfilesvc
    image: eu.gcr.io/census-rm-ci/rm/census-rm-print-file-service
    external_links:
      - rabbitmq
      - sftp
    environment:
      - RABBIT_QUEUE=Action.Printer
      - RABBIT_HOST=${RABBIT_HOST}
      - RABBIT_PORT=${RABBIT_PORT}
      - RABBIT_USERNAME=guest
      - RABBIT_PASSWORD=guest
      - RABBIT_VIRTUALHOST=/
      - READINESS_FILE_PATH=/tmp/ready
      - ENVIRONMENT=DEV
      - SFTP_HOST=sftp
      - SFTP_PORT=22
      - SFTP_USERNAME=centos
      - SFTP_KEY_FILENAME=/home/printfile/dummy_keys/dummy_rsa
      - SFTP_PASSPHRASE=secret
      - EXCEPTIONMANAGER_CONNECTION_HOST=${EXCEPTIONMANAGER_HOST}
      - EXCEPTIONMANAGER_CONNECTION_PORT=${EXCEPTIONMANAGER_PORT}
    restart: always
    healthcheck:
      test: sh -c "[ -f /tmp/ready ]"
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 50s

  pubsub-adapter:
    container_name: pubsub-adapter
    image: eu.gcr.io/census-rm-ci/rm/census-rm-pubsub-adapter
    external_links:
      - rabbitmq
      - pubsub-emulator
    environment:
      - LOG_LEVEL=INFO
      - RABBIT_USERNAME=guest
      - RABBIT_PASSWORD=guest
      - RABBIT_HOST=${RABBIT_HOST}
      - RABBIT_PORT=${RABBIT_PORT}
      - EQ_RECEIPT_PROJECT=${EQ_RECEIPT_PROJECT}
      - OFFLINE_RECEIPT_PROJECT=${OFFLINE_SUBSCRIPTION_PROJECT_ID}
      - QM_UNDELIVERED_SUBSCRIPTION_PROJECT=${QM_UNDELIVERED_SUBSCRIPTION_PROJECT_ID}
      - PPO_UNDELIVERED_SUBSCRIPTION_PROJECT=${PPO_UNDELIVERED_SUBSCRIPTION_PROJECT_ID}
      - FULFILMENT_CONFIRMED_PROJECT=${FULFILMENT_CONFIRMED_PROJECT}
      - EQ_FULFILMENT_PROJECT=${EQ_FULFILMENT_PROJECT}
      - READINESS_FILE_PATH=/tmp/ready
      - PUBSUB_EMULATOR_HOST=${PUBSUB_EMULATOR_HOSTNAME}:${PUBSUB_EMULATOR_PORT}
      - QUARANTINE_MESSAGE_URL=http://${EXCEPTIONMANAGER_HOST}:${EXCEPTIONMANAGER_PORT}/storeskippedmessage
    restart: always
    healthcheck:
      test: sh -c "[ -f /tmp/ready ]"
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 50s

  caseapi:
    container_name: caseapi
    image: eu.gcr.io/census-rm-ci/rm/census-rm-case-api
    ports:
      - "${CASE_API_PORT}:8161"
    external_links:
     - postgres
    environment:
     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
     - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
     - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
     - UACSERVICE_CONNECTION_HOST=${UAC_HOST}
     - UACSERVICE_CONNECTION_PORT=${UAC_PORT}
     - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
     - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8161/actuator/info"]
      interval: 60s
      timeout: 10s
      retries: 4
      start_period: 50s

  fwmtadapter:
    container_name: fwmtadapter
    image: eu.gcr.io/census-rm-ci/rm/census-rm-fieldwork-adapter
    external_links:
     - rabbitmq
    environment:
     - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
     - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
     - CASEAPI_HOST=${CASE_API_HOST}
     - CASEAPI_PORT=${CASE_API_PORT}
     - EXCEPTIONMANAGER_CONNECTION_HOST=${EXCEPTIONMANAGER_HOST}
     - EXCEPTIONMANAGER_CONNECTION_PORT=${EXCEPTIONMANAGER_PORT}
    healthcheck:
      test: ["CMD", "find", "/tmp/fwmt-adapter-healthy", "-mmin", "-1"]
      interval: 60s
      timeout: 10s
      retries: 4
      start_period: 30s

  notifyprocessor:
    container_name: notifyprocessor
    image: eu.gcr.io/census-rm-ci/rm/census-rm-notify-processor
    external_links:
     - rabbitmq
     - notifystub
    environment:
     - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
     - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
     - CASEAPI_HOST=${CASE_API_HOST}
     - CASEAPI_PORT=${CASE_API_PORT}
     - NOTIFY_BASEURL=${NOTIFY_STUB_BASEURL}
     - NOTIFY_TESTMODE=false
     - EXCEPTIONMANAGER_CONNECTION_HOST=${EXCEPTIONMANAGER_HOST}
     - EXCEPTIONMANAGER_CONNECTION_PORT=${EXCEPTIONMANAGER_PORT}
    healthcheck:
      test: ["CMD", "find", "/tmp/notify-processor-healthy", "-mmin", "-1"]
      interval: 60s
      timeout: 10s
      retries: 4
      start_period: 30s

  exceptionmanager:
    container_name: exceptionmanager
    image: eu.gcr.io/census-rm-ci/rm/census-rm-exception-manager
    ports:
      - "${EXCEPTIONMANAGER_PORT}:8666"
    restart: always
    environment:
     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
     - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
     - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
     - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
     - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8666/actuator/info"]
      interval: 60s
      timeout: 10s
      retries: 4
      start_period: 30s

networks:
  default:
    external:
      name: censusrmdockerdev_default
