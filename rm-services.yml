version: '3'
services:
  caseprocessor:
    container_name: caseprocessor
    image: eu.gcr.io/census-rm-ci/rm/census-rm-case-processor
    external_links:
     - postgres
     - rabbitmq
     - uacqid
    environment:
     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
     - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
     - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
     - UACSERVICE_CONNECTION_HOST=${UAC_HOST}
     - UACSERVICE_CONNECTION_PORT=${UAC_PORT}
     - EXCEPTIONMANAGER_CONNECTION_HOST=${EXCEPTIONMANAGER_HOST}
     - EXCEPTIONMANAGER_CONNECTION_PORT=${EXCEPTIONMANAGER_PORT}
     - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
     - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD", "find", "/tmp/case-service-healthy", "-mmin", "-1"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  actionscheduler:
    container_name: actionscheduler
    image: eu.gcr.io/census-rm-ci/rm/census-rm-action-scheduler
    ports:
     - "${ACTION_SCHEDULER_PORT}:8301"
    external_links:
     - postgres
     - rabbitmq
     - redis
    environment:
     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
     - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
     - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
     - EXCEPTIONMANAGER_CONNECTION_HOST=${EXCEPTIONMANAGER_HOST}
     - EXCEPTIONMANAGER_CONNECTION_PORT=${EXCEPTIONMANAGER_PORT}
     - REDIS_HOST=${REDIS_HOST}
     - JAVA_OPTS=-Xmx512m
     - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
     - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8301/actuator/info"]
      interval: 1m30s
      timeout: 10s
      retries: 3


  actioncasedrainer:
    container_name: actioncasedrainer
    image: eu.gcr.io/census-rm-ci/rm/census-rm-actioned-case-drainer
    ports:
     - "${ACTION_CASE_DRAINER_PORT}:8141"
    external_links:
     - postgres
     - rabbitmq
     - redis
    environment:
     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
     - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
     - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
     - EXCEPTIONMANAGER_CONNECTION_HOST=${EXCEPTIONMANAGER_HOST}
     - EXCEPTIONMANAGER_CONNECTION_PORT=${EXCEPTIONMANAGER_PORT}
     - REDIS_HOST=${REDIS_HOST}
     - JAVA_OPTS=-Xmx512m
     - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
     - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8301/actuator/info"]
      interval: 1m30s
      timeout: 10s
      retries: 3


  uacqid:
    container_name: uacqid
    image: eu.gcr.io/census-rm-ci/rm/census-rm-uac-qid-service
    ports:
     - "${UAC_PORT}:8164"
    external_links:
     - postgres
    environment:
     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
     - JAVA_OPTS=-Xmx128m -Xdebug -Dspring.profiles.active=dev
     - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
     - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8164/actuator/info"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  printfilesvc:
    container_name: printfilesvc
    image: eu.gcr.io/census-rm-ci/rm/census-rm-print-file-service
    external_links:
      - rabbitmq
    environment:
      - RABBIT_QUEUE=Action.Printer
      - RABBIT_HOST=${RABBIT_HOST}
      - RABBIT_PORT=${RABBIT_PORT}
      - RABBIT_USERNAME=guest
      - RABBIT_PASSWORD=guest
      - RABBIT_VIRTUALHOST=/
      - READINESS_FILE_PATH=/tmp/ready
      - ENVIRONMENT=DEV
      - SFTP_HOST=sftp
      - SFTP_PORT=22
      - SFTP_USERNAME=centos
      - SFTP_KEY_FILENAME=/app/dummy_keys/dummy_rsa
      - SFTP_PASSPHRASE=secret
    restart: always
    healthcheck:
      test: sh -c "[ -f /tmp/ready ]"
      interval: 10s
      retries: 10

  pubsub:
    container_name: pubsub
    image: eu.gcr.io/census-rm-ci/rm/census-rm-pubsub
    external_links:
      - rabbitmq
      - pubsub-emulator
    environment:
      - RABBIT_AMQP=amqp://guest:guest@${RABBIT_HOST}:${RABBIT_PORT}
      - RABBIT_USER=guest
      - RABBIT_PASSWORD=guest
      - RABBIT_HOST=${RABBIT_HOST}
      - RABBIT_PORT=${RABBIT_PORT}
      - SUBSCRIPTION_PROJECT_ID=${SUBSCRIPTION_PROJECT_ID}
      - RECEIPT_TOPIC_PROJECT_ID=${RECEIPT_TOPIC_PROJECT_ID}
      - OFFLINE_SUBSCRIPTION_PROJECT_ID=${OFFLINE_SUBSCRIPTION_PROJECT_ID}
      - OFFLINE_RECEIPT_TOPIC_PROJECT_ID=${OFFLINE_RECEIPT_TOPIC_PROJECT_ID}
      - PUBSUB_EMULATOR_HOST=${PUBSUB_EMULATOR_HOSTNAME}:${PUBSUB_EMULATOR_PORT}
      - RECEIPT_TOPIC_NAME=${RECEIPT_TOPIC_NAME}
      - SUBSCRIPTION_NAME=${SUBSCRIPTION_NAME}
      - OFFLINE_RECEIPT_TOPIC_NAME=${OFFLINE_RECEIPT_TOPIC_NAME}
      - OFFLINE_SUBSCRIPTION_NAME=${OFFLINE_SUBSCRIPTION_NAME}
      - QM_UNDELIVERED_SUBSCRIPTION_NAME=${QM_UNDELIVERED_SUBSCRIPTION_NAME}
      - QM_UNDELIVERED_SUBSCRIPTION_PROJECT_ID=${QM_UNDELIVERED_SUBSCRIPTION_PROJECT_ID}
      - QM_UNDELIVERED_TOPIC_NAME=${QM_UNDELIVERED_TOPIC_NAME}
      - PPO_UNDELIVERED_SUBSCRIPTION_NAME=${PPO_UNDELIVERED_SUBSCRIPTION_NAME}
      - PPO_UNDELIVERED_SUBSCRIPTION_PROJECT_ID=${PPO_UNDELIVERED_SUBSCRIPTION_PROJECT_ID}
      - PPO_UNDELIVERED_TOPIC_NAME=${PPO_UNDELIVERED_TOPIC_NAME}

    restart: always

# Case-API needs to be set to tag v2.4.0 because master includes changes for CCS
  caseapi:
    container_name: caseapi
    image: eu.gcr.io/census-rm-ci/rm/census-rm-case-api:latest
    ports:
      - "${CASE_API_PORT}:8161"
    external_links:
     - postgres
    environment:
     - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_HOST}?sslmode=disable
     - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
     - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
     - UACSERVICE_CONNECTION_HOST=${UAC_HOST}
     - UACSERVICE_CONNECTION_PORT=${UAC_PORT}
     - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
     - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8161/actuator/info"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  fwmtadapter:
    container_name: fwmtadapter
    image: eu.gcr.io/census-rm-ci/rm/census-rm-fieldwork-adapter
    external_links:
     - rabbitmq
    environment:
     - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
     - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
     - CASEAPI_HOST=${CASE_API_HOST}
     - CASEAPI_PORT=${CASE_API_PORT}
     - EXCEPTIONMANAGER_CONNECTION_HOST=${EXCEPTIONMANAGER_HOST}
     - EXCEPTIONMANAGER_CONNECTION_PORT=${EXCEPTIONMANAGER_PORT}
    healthcheck:
      test: ["CMD", "find", "/tmp/fwmt-adapter-healthy", "-mmin", "-1"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  notifyprocessor:
    container_name: notifyprocessor
    image: eu.gcr.io/census-rm-ci/rm/census-rm-notify-processor
    external_links:
     - rabbitmq
     - notifystub
    environment:
     - SPRING_RABBITMQ_HOST=${RABBIT_HOST}
     - SPRING_RABBITMQ_PORT=${RABBIT_PORT}
     - CASEAPI_HOST=${CASE_API_HOST}
     - CASEAPI_PORT=${CASE_API_PORT}
     - NOTIFY_BASEURL=${NOTIFY_STUB_BASEURL}
     - NOTIFY_TESTMODE=false
     - EXCEPTIONMANAGER_CONNECTION_HOST=${EXCEPTIONMANAGER_HOST}
     - EXCEPTIONMANAGER_CONNECTION_PORT=${EXCEPTIONMANAGER_PORT}
    healthcheck:
      test: ["CMD", "find", "/tmp/notify-processor-healthy", "-mmin", "-1"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  exceptionmanager:
    container_name: exceptionmanager
    image: eu.gcr.io/census-rm-ci/rm/census-rm-exception-manager
    ports:
      - "${EXCEPTIONMANAGER_PORT}:8666"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8666/actuator/info"]
      interval: 1m30s
      timeout: 10s
      retries: 3

networks:
  default:
    external:
      name: censusrmdockerdev_default
